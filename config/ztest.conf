input {
    file {
        path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/first_play.txt*"
        start_position => "beginning"
        type=>"first_play"
        stat_interval=>30
        discover_interval=>30
        max_open_files=>500
        exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    }

    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/pause.txt*"
    #     start_position => "beginning"
    #     type=>"pause"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }
    
    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/seek.txt*"
    #     start_position => "beginning"
    #     type=>"seek"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }  

    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/buffered.txt*"
    #     start_position => "beginning"
    #     type=>"buffered"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }
    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/first_quarter.txt*"
    #     start_position => "beginning"
    #     type=>"first_quarter"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }
    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/performance.txt*"
    #     start_position => "beginning"
    #     type=>"performance"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }
    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/watched_time.txt*"
    #     start_position => "beginning"
    #     type=>"watchedtime"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }
    # file {
    #     path => "D:/VideoJS/ELK/log-manage/data_webs/kenhhai/failed.txt*"
    #     start_position => "beginning"
    #     type=>"failed"
    #     stat_interval=>30
    #     discover_interval=>30
    #     max_open_files=>500
    #     exclude => [ "*.tar", "*.tar.gz", "*.zip" ]
    # }
}

filter {

  if [type] == "first_play" {
    grok {
      match => { "message" => "%{WORD:service_token} %{WORD:user_id} %{URIPATH:curent_url} %{URIPATH:src_video} %{IP:ip_public} %{IP:ip_private} %{NUMBER:secondsToLoad} %{DATE:date_watch}" }
    }
  }
}

output {

  if [type] == "first_play" {
    stdout {
        codec => rubydebug
    }
  }
	
  # if [type] == "first_play" {
	#   stdout {
  #       codec => rubydebug
  #   }
	# }
  # if [type] == "performance" {
	#   stdout {
  #       codec => rubydebug
  #   }
	# }

	# if [type] == "first_play" {
	#     elasticsearch {
	# 		hosts => ["127.0.0.1:9200"] 
	# 		index => "first_play-log-event"
	# 	}
	# }

	# if [type] == "performance" {
	# 	elasticsearch {
	# 		hosts => ["127.0.0.1:9200"]
	# 		index => "performance-log-event"
	# 	}
	# }

  # if [type] == "pause" {
	#     elasticsearch {
	# 		hosts => ["127.0.0.1:9200"] 
	# 		index => "pause-log-event"
	# 	}
	# }
    
  # if [type] == "buffered" {
	#     elasticsearch {
	# 		hosts => ["127.0.0.1:9200"] 
	# 		index => "buffered-log-event"
	# 	}
	# }

  # if [type] == "watchedtime" {
  #     elasticsearch {
	# 		hosts => ["127.0.0.1:9200"] 
	# 		index => "watchedtime-log-event"
  # }

  # if [type] == "failed" {
  #     elasticsearch {
	# 		hosts => ["127.0.0.1:9200"] 
	# 		index => "failed-log-event"
  # }

}
